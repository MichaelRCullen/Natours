/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*   */
/* Simple Browser basic reset using universal */
* {
	margin: 0px;
	padding: 0px;
	box-sizing: border-box; /* Change the box model so borders and paddings are no longer added to total height and width that we specify for the box */
}

body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	font-size: 16px;
	line-height: 1.7;
	color: #777;
	padding: 30px;
}

.header {
	height: 95vh; /* at every point the height of this element should be 95% of the viewport height */
	background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)),
		url(../img/hero.jpg);
	background-size: cover;
	background-position: top;
	position: relative;
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
	/* Image is an inline element so a small container wrapper is good practice to style the image */
	position: absolute; /* notes tbd  */
	top: 40px; /* position measurement starts with a parent element (.header) reference set as "position: relative"  */
	left: 40px;
}

.logo {
	height: 35px; /* width will scale accordingly when not specified and vice versa - prefer to control height of an element  */
}

.text-box {
	position: absolute; /* notes tbd  */
	top: 40%; /* In relation to parent element */
	left: 50%; /* In relation to parent element */
	transform: translate(-50%, -50%); /* -50% no longer in relation to parent element - but of the element itself */
	text-align: center;
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;

	backface-visibility: hidden; /* Corrects minor animation shake */
	margin-bottom: 60px;
}

.heading-primary-main {
	display: block; /* Block level elements occupy the entire width available, and create line breaks before and after them */
	font-size: 60px;
	font-weight: 400;
	letter-spacing: 35px;

	animation-name: moveInLeft; /* using @keyframes */
	animation-duration: 3s;
	animation-timing-function: ease-out;
}

.heading-primary-sub {
	display: block;
	font-size: 20px;
	font-weight: 400;
	letter-spacing: 17.4px;

	animation: moveInRight 3s ease-out; /* using @keyframes combined */
}

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-100px);
	}

	80% {
		transform: translateX(10px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(100px);
	}

	80% {
		transform: translateX(-10px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(30px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

.btn:link,
.btn:visited {
	/* :link is a pseudo class - a special state of a selector - to style elements under a speacial condition */
	text-transform: uppercase;
	text-decoration: none;
	padding: 15px 40px;
	display: inline-block; /* inline element because it is simply text - box model now works on this element as if it is a normal block element */
	border-radius: 100px;
	transition: all .2s; /* shorthand version - transform on hover and active will be animated in relation to initial state - transition must be on initial state  */
}

.btn:hover {
	transform: translateY(-3px);
	box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
	transform: translateY(-1px);
	box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
	background-color: #fff;
	color: #777;
}

/* debugging needed here
.btn::after {
	content: **;
	display: inline-block;
	height: 100%;
	width: 100%;
	border-radius: 100px;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;
	transition: all .4s;
}

.btn-white::after {
	background-color: #fff;
}

.btn:hover::after {
	transform: scale(1.5);
}
*/

.btn-animated {
	animation: moveInBottom .5s ease-out .75s;
	animation-fill-mode: backwards;
}
